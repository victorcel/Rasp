/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rasp;

import com.pi4j.io.gpio.GpioController;
import com.pi4j.io.gpio.GpioFactory;
import com.pi4j.io.gpio.GpioPinDigitalInput;
import com.pi4j.io.gpio.PinPullResistance;
import com.pi4j.io.gpio.RaspiPin;
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GradientPaint;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.JThermometer;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.data.general.DefaultValueDataset;

/**
 *
 * @author vbarrera
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    JFreeChart Grafica;
    JFreeChart Grafica1;
    JThermometer termometro = new JThermometer();
    JThermometer termometro1 = new JThermometer();
    DialPlot dialPlot = new DialPlot();
    DialPlot dialPlot1 = new DialPlot();
    DefaultValueDataset Datos = new DefaultValueDataset();
    DefaultValueDataset Datos1 = new DefaultValueDataset();
    ThermometerPlot plot = new ThermometerPlot(Datos);
    ThermometerPlot plot1 = new ThermometerPlot(Datos1);
    PrintWriter out;
    BufferedReader in;
    ServerSocket server;
    Socket socket;

    @Override
    public void setVisible(boolean b) {
        super.setVisible(b); //To change body of generated methods, choose Tools | Templates.
    }

    public Principal() {
        initComponents();
        //setSize(1000, 600);
        // setExtendedState(MAXIMIZED_BOTH);
        setLocationRelativeTo(this);
        setVisible(true);
        Grafica = new JFreeChart("Temp", JFreeChart.DEFAULT_TITLE_FONT, plot, false);
        plot.setUnits(ThermometerPlot.UNITS_CELCIUS);
        plot.setThermometerStroke(new BasicStroke(2.0F));
        ChartPanel chartPanel = new ChartPanel(Grafica);
        panelGrafica.setLayout(new BorderLayout());
        panelGrafica.add(chartPanel);

        Grafica1 = new JFreeChart("Temp", JFreeChart.DEFAULT_TITLE_FONT, plot1, false);
        plot1.setUnits(ThermometerPlot.UNITS_CELCIUS);
        plot1.setThermometerStroke(new BasicStroke(2.0F));
        ChartPanel chartPanel1 = new ChartPanel(Grafica1);
        panelGrafica1.setLayout(new BorderLayout());
        panelGrafica1.add(chartPanel1);
        // Seria();
    }

    public void mostrar() {
        JOptionPane.showMessageDialog(null, "Inicio Mostrar");
        new Thread(new Runnable() {

            @Override
            public void run() {

                final GpioController gpio = GpioFactory.getInstance();
                final GpioPinDigitalInput myButton = gpio.provisionDigitalInputPin(RaspiPin.GPIO_02,
                        PinPullResistance.PULL_DOWN);

                while (true) {
                    try {
                        Thread.sleep(500);
//                        myButton.addListener(new GpioPinListenerDigital() {
//                            @Override
//                            public void handleGpioPinDigitalStateChangeEvent(GpioPinDigitalStateChangeEvent event) {
//                                // display pin state on console
//                                estado.setText(null);
//                                if (event.getState().equals(this)) {
//                                }
//                                JOptionPane.showMessageDialog(null, " --> GPIO PIN STATE CHANGE: " + event.getPin() + " = " + event.getState());
//                            }
//                        });
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });//.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        textenviar = new javax.swing.JTextField();
        botonEnviar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textRecibido = new javax.swing.JTextArea();
        botonConectar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tem1 = new javax.swing.JPanel();
        panelGrafica = new javax.swing.JPanel();
        tempBaja1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        monitor1 = new javax.swing.JButton();
        tempAlta1 = new javax.swing.JTextField();
        setPoint1 = new javax.swing.JTextField();
        tem2 = new javax.swing.JPanel();
        panelGrafica1 = new javax.swing.JPanel();
        monitor2 = new javax.swing.JButton();
        tempBaja2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        setPoint2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tempAlta2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setText(" Enviar Datos:");

        botonEnviar.setText("Enviar");
        botonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarActionPerformed(evt);
            }
        });

        textRecibido.setColumns(20);
        textRecibido.setRows(5);
        jScrollPane1.setViewportView(textRecibido);

        botonConectar.setText("Conectar");
        botonConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConectarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonConectar, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(textenviar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonEnviar)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonConectar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textenviar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonEnviar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelGrafica.setPreferredSize(new java.awt.Dimension(400, 296));

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel5.setText("Temp. Alta");

        jLabel6.setText("Set Point");

        jLabel7.setText("Temp. Baja");

        monitor1.setText("Monitor");
        monitor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monitor1ActionPerformed(evt);
            }
        });

        tempAlta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempAlta1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tem1Layout = new javax.swing.GroupLayout(tem1);
        tem1.setLayout(tem1Layout);
        tem1Layout.setHorizontalGroup(
            tem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tem1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(tem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tempAlta1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setPoint1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tempBaja1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monitor1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tem1Layout.setVerticalGroup(
            tem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tem1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tempAlta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(6, 6, 6)
                .addComponent(setPoint1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel7)
                .addGap(6, 6, 6)
                .addComponent(tempBaja1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(monitor1)
                .addContainerGap(192, Short.MAX_VALUE))
            .addGroup(tem1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Temperatura 1", tem1);

        panelGrafica1.setPreferredSize(new java.awt.Dimension(400, 296));

        javax.swing.GroupLayout panelGrafica1Layout = new javax.swing.GroupLayout(panelGrafica1);
        panelGrafica1.setLayout(panelGrafica1Layout);
        panelGrafica1Layout.setHorizontalGroup(
            panelGrafica1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        panelGrafica1Layout.setVerticalGroup(
            panelGrafica1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        monitor2.setText("Monitor");
        monitor2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monitor2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Temp. Baja");

        jLabel9.setText("Set Point");

        jLabel10.setText("Temp. Alta");

        tempAlta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempAlta2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tem2Layout = new javax.swing.GroupLayout(tem2);
        tem2.setLayout(tem2Layout);
        tem2Layout.setHorizontalGroup(
            tem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tem2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelGrafica1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(tem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tempAlta2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setPoint2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tempBaja2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monitor2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tem2Layout.setVerticalGroup(
            tem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tem2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tempAlta2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(6, 6, 6)
                .addComponent(setPoint2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel8)
                .addGap(6, 6, 6)
                .addComponent(tempBaja2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(monitor2)
                .addContainerGap(192, Short.MAX_VALUE))
            .addGroup(tem2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelGrafica1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Temperatura 2", tem2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarActionPerformed
        try {
            out = new PrintWriter(socket.getOutputStream(), true);
            out.println(textenviar.getText());
            out.flush();
            textenviar.setText(null);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonEnviarActionPerformed

    private void botonConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConectarActionPerformed
        plot.setSubrangeInfo(ThermometerPlot.NORMAL, Double.parseDouble(tempBaja1.getText().toString()), Double.parseDouble(setPoint1.getText().toString()), 0.0, 150.0);
        plot.setSubrangePaint(0, new GradientPaint(1.0f, 2.0f, Color.BLUE, 3.0f, 4.0f, Color.BLUE));
        plot.setSubrangeInfo(ThermometerPlot.WARNING, Double.parseDouble(setPoint1.getText().toString()), Double.parseDouble(tempAlta1.getText().toString()), 0.0, 150.0);
        plot.setSubrangePaint(1, new GradientPaint(1.0f, 2.0f, Color.green, 3.0f, 4.0f, Color.green));
        plot.setSubrangeInfo(ThermometerPlot.CRITICAL, Double.parseDouble(tempAlta1.getText().toString()), 150.0, 0.0, 150.0);
        plot.setSubrangePaint(2, new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.red));
        plot.setThermometerStroke(new BasicStroke(2.0f));
        plot.setThermometerPaint(Color.BLACK);
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    System.out.println("Conectado");
                    //termometro.setValue(40);
                    //  Datos.setValue(40);
                    server = new ServerSocket(500);
                    while (true) {
                        try {
                            // Thread.sleep(50);
                            socket = server.accept();
                            textRecibido.append("Conectado... " + socket.getInetAddress().getHostName() + " " + socket.getPort() + "\n");
                            System.out.println("Paso 1");
                            new Thread(new Runnable() {
                                @Override
                                public void run() {
                                    try {
                                        String dato;
                                        in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                                        //   DataInputStream in = new DataInputStream(new DataInputStream(socket.getInputStream()));
                                        //   ObjectInputStream in=new ObjectInputStream(new ObjectInputStream(socket.getInputStream()));
                                        System.out.println("Paso 2");
                                        while ((dato = in.readLine()) != null) {
                                            // recibido.append(Utilidades.Desencriptar(dato) + "\n");
                                            // System.out.println("Mensaje Server: " + dato);
                                            if (dato.length() > 0) {
                                                //dato.substring(0, 4);
                                                Thread.sleep(500);
                                                termometro.setValue(Integer.parseInt(dato.substring(2, 5).toString()));
                                                Datos.setValue(Integer.parseInt(dato.substring(2, 5).toString()));
                                               // termometro1.setValue(Integer.parseInt(dato.substring(6, 10)));
                                                // Datos1.setValue(Integer.parseInt(dato.substring(6, 10)));
                                                textRecibido.append("Da1 " + dato.substring(2, 5) + "\n" + "Da2" + dato.substring(6, 10) + "\n");
                                            }
                                        }
                                    } catch (IOException ex) {
                                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                                    } catch (InterruptedException ex) {
                                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                            }).start();
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }).start();
    }//GEN-LAST:event_botonConectarActionPerformed

    private void monitor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monitor1ActionPerformed
        // plot.setSubrangeInfo(ThermometerPlot.NORMAL, 0.0, Double.parseDouble(tempBaja1.getText().toString()), 20.0, 100.0);
        // plot.setSubrangePaint(0, new GradientPaint(1.0f, 2.0f, Color.BLUE, 3.0f, 4.0f, Color.BLUE));
/*        plot.setSubrangeInfo(ThermometerPlot.NORMAL, Double.parseDouble(tempBaja1.getText().toString()), Double.parseDouble(setPoint1.getText().toString()), 0.0, 150.0);
         plot.setSubrangePaint(0, new GradientPaint(1.0f, 2.0f, Color.BLUE, 3.0f, 4.0f, Color.BLUE));
         plot.setSubrangeInfo(ThermometerPlot.WARNING, Double.parseDouble(setPoint1.getText().toString()), Double.parseDouble(tempAlta1.getText().toString()), 0.0, 150.0);
         plot.setSubrangePaint(1, new GradientPaint(1.0f, 2.0f, Color.green, 3.0f, 4.0f, Color.green));
         plot.setSubrangeInfo(ThermometerPlot.CRITICAL, Double.parseDouble(tempAlta1.getText().toString()), 150.0, 0.0, 150.0);
         plot.setSubrangePaint(2, new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.red));
         plot.setThermometerStroke(new BasicStroke(2.0f));
         plot.setThermometerPaint(Color.BLACK);

         // mostrar();
         //       Grafica = ChartFactory.createAreaChart("Temp", "WWE", "WEWE", Datos);
         //panelGrafica.setLayout(new BorderLayout(50, 50));
         //  termometro.setUnits(ThermometerPlot.CRITICAL);
         //  plot.setRange(10, 20);
         //        ChartPanel panel = new ChartPanel(Grafica);
         new Thread(new Runnable() {

         @Override
         public void run() {
         for (int i = 0; i < 100; i++) {
         try {
         Thread.sleep(100);
         termometro.setValue(i);
         Datos.setValue(i);
         } catch (InterruptedException ex) {
         Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
         }
         }
         }
         }).start();*/
    }//GEN-LAST:event_monitor1ActionPerformed

    private void tempAlta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempAlta1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tempAlta1ActionPerformed

    private void monitor2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monitor2ActionPerformed
        plot1.setSubrangeInfo(ThermometerPlot.NORMAL, 0.0, Double.parseDouble(tempBaja2.getText().toString()), 0.0, 100.0);
        plot1.setSubrangePaint(0, new GradientPaint(1.0f, 2.0f, Color.blue, 3.0f,
                4.0f, Color.blue));
        plot1.setSubrangeInfo(ThermometerPlot.WARNING, Double.parseDouble(tempBaja2.getText().toString()), Double.parseDouble(setPoint2.getText().toString()), 0.0, 100.0);
        plot1.setSubrangePaint(1, new GradientPaint(1.0f, 2.0f, Color.green, 3.0f,
                4.0f, Color.green));
        plot1.setSubrangeInfo(ThermometerPlot.CRITICAL, Double.parseDouble(setPoint2.getText().toString()), Double.parseDouble(tempAlta2.getText().toString()), 0.0, 100.0);
        plot1.setThermometerStroke(new BasicStroke(2.0f));
        plot1.setThermometerPaint(Color.BLACK);

        // mostrar();
        //       Grafica = ChartFactory.createAreaChart("Temp", "WWE", "WEWE", Datos);
        //panelGrafica.setLayout(new BorderLayout(50, 50));
        //  termometro.setUnits(ThermometerPlot.CRITICAL);
        //  plot.setRange(10, 20);
        //        ChartPanel panel = new ChartPanel(Grafica);
        new Thread(new Runnable() {

            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    try {
                        Thread.sleep(100);
                        termometro1.setValue(i);
                        Datos1.setValue(i);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
    }//GEN-LAST:event_monitor2ActionPerformed

    private void tempAlta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempAlta2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tempAlta2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //Principal p = new Principal();

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonConectar;
    private javax.swing.JButton botonEnviar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton monitor1;
    private javax.swing.JButton monitor2;
    private javax.swing.JPanel panelGrafica;
    private javax.swing.JPanel panelGrafica1;
    private javax.swing.JTextField setPoint1;
    private javax.swing.JTextField setPoint2;
    private javax.swing.JPanel tem1;
    private javax.swing.JPanel tem2;
    private javax.swing.JTextField tempAlta1;
    private javax.swing.JTextField tempAlta2;
    private javax.swing.JTextField tempBaja1;
    private javax.swing.JTextField tempBaja2;
    private javax.swing.JTextArea textRecibido;
    private javax.swing.JTextField textenviar;
    // End of variables declaration//GEN-END:variables
}
